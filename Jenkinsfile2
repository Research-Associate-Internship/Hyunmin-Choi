pipeline {
    // define the exact agent you want to use to run these jobs via label
    agent {
        label 'workernode1'
    }

stages {
    stage('Checkout') {
            steps {
                // Get some code from a GitHub repository
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Research-Associate-Internship/Hyunmin-Choi.git']]])
        
            }
        }  


    stage('vault') {
      environment {
        VAULT_ADDR="http://10.0.1.230:8200"
        //VAULT_NAMESPACE="<only for Vault Enterprise / HCP, remove otherwise>"
      }
      steps {
        withCredentials([string(credentialsId: 'id-token', variable: 'IDTOKEN')]) {
            sh 'echo ${IDTOKEN} > token.txt'
            sh 'cat token.txt'
            sh 'vault write -field=token auth/jwt/login jwt=${IDTOKEN} > token'
            sh 'set +x ; VAULT_TOKEN=$(cat token) vault read -field=data -format=json kv/data/my-secret'
        }
      }
    }
  }
  post{
    always {  
      cleanWs()          
    }      
  }  


}